{"version":3,"sources":["AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","Googlif.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","categories","type","placeholder","value","onChange","target","getGifs","category","a","encodedCat","encodeURI","uri","fetch","res","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","copied","setCopied","useEffect","setTimeout","className","onClick","navigator","clipboard","writeText","src","alt","GifGrid","loading","state","setState","then","imgs","useFetchGifs","Googlif","c","ReactDOM","render","document","getElementById"],"mappings":"gLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAahD,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACwB,IAAtBJ,EAAWK,SAEfP,GAAc,SAACQ,GAAD,OAAiBN,GAAjB,mBAAgCM,OAC9CL,EAAc,MAId,SACE,uBACEM,KAAK,OACLC,YAAY,kBACZC,MAAOT,EACPU,SAhBoB,SAAC,GAAD,IAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BR,EAAcQ,S,+BCNxDG,EAAO,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,6DACfC,EAAaC,UAAUH,GAEvBI,EAHe,iDAGiCF,EAHjC,+DAIHG,MAAMD,GAJH,cAIfE,EAJe,gBAKEA,EAAIC,OALN,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,QAXhB,kBAedL,GAfc,4CAAH,sDCGPQ,G,KAAc,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAAU,EACjB5B,oBAAS,GADQ,mBACtCgC,EADsC,KAC9BC,EAD8B,KAS7C,OANAC,qBAAU,WACRC,YAAW,WACTF,GAAU,KACT,OACF,CAACD,IAGF,sBACEI,UAAU,2CACVC,QAAS,WACPC,UAAUC,UAAUC,UAAUZ,GAC9BK,GAAU,IAJd,UAOE,qBAAKQ,IAAKb,EAAKc,IAAKf,IACnBK,EAAS,mBAAGI,UAAU,QAAb,kCAAgD,4BAAIT,SChBvDgB,EAAU,SAAC,GAAkB,IAAhB7B,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdd,mBAAS,CAAEsB,KAAM,GAAIsB,SAAS,IADhB,mBACjCC,EADiC,KAC1BC,EAD0B,KAOxC,OAJAZ,qBAAU,WACRrB,EAAQC,GAAUiC,MAAK,SAACC,GAAD,OAAUF,EAAS,CAAExB,KAAM0B,EAAMJ,SAAS,SAChE,CAAC9B,IAEG+B,EDJ2BI,CAAanC,GAAjCe,EADyB,EAC/BP,KAAcsB,EADiB,EACjBA,QAEtB,OACE,qCACE,6BAAK9B,IAEJ8B,GACC,mBAAGR,UAAU,mCAAb,wBAGF,qBAAKA,UAAU,YAAf,SACGP,EAAOL,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEIjBwB,EAlBC,WAAO,IAAD,EACgBlD,mBAAS,CAAC,eAD1B,mBACbO,EADa,KACDR,EADC,KAGpB,OACE,qCACE,yCACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACGQ,EAAWiB,KAAI,SAAC2B,GAAD,OACd,cAAC,EAAD,CAAiBrC,SAAUqC,GAAbA,Y,MCRxBC,IAASC,OAAO,cAAC,EAAD,IAAaC,SAASC,eAAe,W","file":"static/js/main.a5afef15.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = ({ target: { value } }) => setInputValue(value);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.length === 0) return;\r\n\r\n    setCategories((categories) => [inputValue, ...categories]);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for gifs\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const encodedCat = encodeURI(category);\r\n\r\n  const uri = `https://api.giphy.com/v1/gifs/search?q=${encodedCat}&limit=10&api_key=BaG1CBfN7m5BIgBh15iyCQfu6BvUvN1E`;\r\n  const res = await fetch(uri);\r\n  const { data } = await res.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"animate.css\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setCopied(false);\r\n    }, 3000);\r\n  }, [copied]);\r\n\r\n  return (\r\n    <div\r\n      className=\"card animate__animated animate__bounceIn\"\r\n      onClick={() => {\r\n        navigator.clipboard.writeText(url);\r\n        setCopied(true);\r\n      }}\r\n    >\r\n      <img src={url} alt={title} />\r\n      {copied ? <p className=\"green\">Copied to clipboard!</p> : <p>{title}</p>}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport \"animate.css\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash\">loading...</p>\r\n      )}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({ data: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => setState({ data: imgs, loading: false }));\r\n  }, [category]);\r\n\r\n  return state; // { data: [], loading: true }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst Googlif = () => {\r\n  const [categories, setCategories] = useState([\"Fairy tail\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Googlif</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((c) => (\r\n          <GifGrid key={c} category={c} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Googlif;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Googlif from \"./Googlif\";\nimport \"./index.css\";\n\n// const apiKey = \"BaG1CBfN7m5BIgBh15iyCQfu6BvUvN1E\";\n\nReactDOM.render(<Googlif />, document.getElementById(\"root\"));\n"],"sourceRoot":""}